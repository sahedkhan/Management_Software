/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package managementsystem;

import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterJob;
import java.sql.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.TableModel;
import static managementsystem.DataBase.resultSet;
import static managementsystem.DataBase.statement;

/**
 *
 * @author redoy
 */
public class CcustomerStock extends javax.swing.JFrame {
/*
    
    
    static final String DATABASE_URL = "jdbc:mysql://localhost/stone";
    static final String DATABASE_USER = "root";
    static final String DATABASE_PASS = "";
   static Connection connection = null; // manages connection
    static Statement statement = null; // query statement
    static ResultSet resultSet = null;

    */
    
    
    ArrayList Arry = new ArrayList();    /**
     * Creates new form customerStock
     */
    public CcustomerStock() throws SQLException {

        initComponents();
        System.out.print("Z");

        DataBaseName();

///
    }

    private void DataBaseName() {

        try {

           java.sql.Connection conn = new DataBase().connection;
          java.sql.Statement rst = conn.createStatement();

            System.out.println("OOO");
          //  String sqlz = "select * from customer"

            String sql = "select * from customer";
            System.out.println("PPPPXCCC");
           ResultSet rs= rst.executeQuery(sql);
            System.out.println("PQQQQQQQQQQQMCCC");

            while (rs.next()) {
                System.out.println("SSSSSSSSSSSSSSPPPP");

                String Nm = rs.getString("c_name");

                System.out.println("PRINT FFFF"+Nm);
             //  CcustomerStock st = new  CcustomerStock();

                Arry.add(Nm);
                System.out.println("RESULT :  " + Nm);
              // st.setVisible(true);
                //  Object rowData[] = {Nm};
                //   st.add(Nm);                

                System.out.println("\n\t ADD ARRAY");
            }
          // rs.close();
           // rst.close();
          //  conn.close();
          //  rst.close();
          //  conn.close();

            //connection.close();
         //CcustomerStock st = new  CcustomerStock();

             //  st.Arry.add(Nm);
            //System.out.println("RESULT :  "+Nm);
            //    st.setVisible(true);
            // 
        } catch (SQLException ex) {
            Logger.getLogger(DataBase.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            //resultSet.close();
            //statement.close();
        }

    }

    public void autoComplete(String txt) {

        String complete = "";
        int start = txt.length();
        int last = txt.length();
        int a;
        for (a = 0; a < Arry.size(); a++) {
            if (Arry.get(a).toString().startsWith(txt)) {
                complete = Arry.get(a).toString();
                last = complete.length();
                break;
            }
        }
        if (last > start) {
            searchF.setText(complete);
            searchF.setCaretPosition(last);
            searchF.moveCaretPosition(start);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        printLabel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stockTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        searchF = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        remainField = new javax.swing.JTextField();
        jomaField = new javax.swing.JTextField();
        korochField = new javax.swing.JTextField();
        select1 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        aDate = new com.toedter.calendar.JDateChooser();
        bDate = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        nameField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        noField = new javax.swing.JTextField();
        amountField = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        select = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        dateField = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        iL = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jMenu11 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu10 = new javax.swing.JMenu();
        jMenu12 = new javax.swing.JMenu();
        jMenu17 = new javax.swing.JMenu();
        jMenu18 = new javax.swing.JMenu();
        jMenu13 = new javax.swing.JMenu();
        jMenu15 = new javax.swing.JMenu();
        jMenu16 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        printLabel.setBackground(new java.awt.Color(204, 204, 204));
        printLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        stockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Joma Tk", "Customer Nam", "Customer No:", "Poriman", "Dor", "Koroch", "Ki Babot", "Remark", "Serial Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stockTable);
        if (stockTable.getColumnModel().getColumnCount() > 0) {
            stockTable.getColumnModel().getColumn(5).setResizable(false);
            stockTable.getColumnModel().getColumn(7).setResizable(false);
        }

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Customer er Lenden Er Hisab");

        searchF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchFMouseReleased(evt);
            }
        });
        searchF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFKeyPressed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Total Joma");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Total Koroch");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Paona TK");

        remainField.setBackground(new java.awt.Color(204, 204, 204));
        remainField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        remainField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        remainField.setBorder(null);

        jomaField.setBackground(new java.awt.Color(204, 204, 204));
        jomaField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jomaField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jomaField.setBorder(null);

        korochField.setBackground(new java.awt.Color(204, 204, 204));
        korochField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        korochField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        korochField.setBorder(null);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jomaField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(korochField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))
                    .addComponent(remainField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remainField, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(korochField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jomaField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        select1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        select1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Name", "ID" }));
        select1.setBorder(null);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setText("Shajalal Stone Crusher");

        aDate.setDateFormatString("yyyy-MM-dd");

        bDate.setDateFormatString("yyyy-MM-dd");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("From");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("To");

        javax.swing.GroupLayout printLabelLayout = new javax.swing.GroupLayout(printLabel);
        printLabel.setLayout(printLabelLayout);
        printLabelLayout.setHorizontalGroup(
            printLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, printLabelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(printLabelLayout.createSequentialGroup()
                .addGroup(printLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(printLabelLayout.createSequentialGroup()
                        .addGap(309, 309, 309)
                        .addComponent(jLabel4))
                    .addGroup(printLabelLayout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(printLabelLayout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(printLabelLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(printLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(printLabelLayout.createSequentialGroup()
                                .addComponent(aDate, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bDate, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(printLabelLayout.createSequentialGroup()
                                .addComponent(select1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchF, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(printLabelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 3, Short.MAX_VALUE))
        );
        printLabelLayout.setVerticalGroup(
            printLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(printLabelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(printLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(printLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2))
                    .addComponent(select1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(printLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(printLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(aDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(printLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Done");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 22, 130, 0));

        nameField.setBackground(new java.awt.Color(204, 204, 204));
        nameField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nameField.setText("Customer Nam");
        nameField.setBorder(null);
        nameField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameFieldMouseClicked(evt);
            }
        });
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        jPanel3.add(nameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 110, 20));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Name                      ");
        jLabel5.setToolTipText("");
        jLabel5.setFocusable(false);
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel5.setVerifyInputWhenFocusTarget(false);
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 120, 30));

        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator5.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jPanel3.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 140, 10));

        jSeparator6.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator6.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jPanel3.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 140, 10));

        noField.setBackground(new java.awt.Color(204, 204, 204));
        noField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        noField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        noField.setText("Auto Asbe Number");
        noField.setBorder(null);
        noField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                noFieldMouseClicked(evt);
            }
        });
        noField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noFieldActionPerformed(evt);
            }
        });
        jPanel3.add(noField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 110, 20));

        amountField.setBackground(new java.awt.Color(204, 204, 204));
        amountField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        amountField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        amountField.setText("0.0");
        amountField.setBorder(null);
        amountField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                amountFieldMouseClicked(evt);
            }
        });
        amountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountFieldActionPerformed(evt);
            }
        });
        jPanel3.add(amountField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 110, 20));

        jSeparator7.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator7.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jPanel3.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 140, 10));

        select.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        select.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Joma", "Neya" }));
        select.setBorder(null);
        jPanel3.add(select, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 110, 30));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Customer No               ");
        jLabel3.setToolTipText("");
        jLabel3.setFocusable(false);
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 120, 30));

        dateField.setDateFormatString("yyyy-MM-dd");
        dateField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(dateField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 180, 30));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Date:                    ");
        jLabel1.setToolTipText("");
        jLabel1.setFocusable(false);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 100, 30));

        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        jSeparator4.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N

        iL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/managementsystem/fd.png"))); // NOI18N
        iL.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), null));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 65, Short.MAX_VALUE)
                        .addComponent(iL)
                        .addGap(150, 150, 150))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(printLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(printLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(iL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton1)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenu2.setText("                                                                  ");
        jMenuBar1.add(jMenu2);
        jMenuBar1.add(jMenu3);

        jMenu4.setBackground(new java.awt.Color(204, 0, 204));
        jMenu4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jMenu4.setText("Sale Product");
        jMenu4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        jMenu6.setBackground(new java.awt.Color(255, 255, 255));
        jMenu6.setForeground(new java.awt.Color(255, 255, 255));
        jMenu6.setText("                     ");
        jMenuBar1.add(jMenu6);

        jMenu5.setText("Stock");
        jMenu5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu5MouseClicked(evt);
            }
        });

        jMenuItem1.setText("    Mal Kiner Stock    ");
        jMenuItem1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 51), 2, true));
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem1);

        jMenuItem3.setText("  Mal Bickri Stock            ");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem3);

        jMenuBar1.add(jMenu5);

        jMenu7.setBackground(new java.awt.Color(255, 255, 255));
        jMenu7.setForeground(new java.awt.Color(255, 255, 255));
        jMenu7.setText("                  ");
        jMenuBar1.add(jMenu7);

        jMenu9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jMenu9.setText("   Customer Stock       ");
        jMenu9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMenu9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu9MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu9);

        jMenu8.setText("               ");
        jMenuBar1.add(jMenu8);

        jMenu11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jMenu11.setText("Employee Details");
        jMenu11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        jMenuItem2.setText("Add New Employee");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem2MouseClicked(evt);
            }
        });
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem2);

        jMenuBar1.add(jMenu11);

        jMenu10.setText("                           ");
        jMenuBar1.add(jMenu10);

        jMenu12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jMenu12.setText("Owener Details");
        jMenu12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jMenu12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu12MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu12);

        jMenu17.setText("             All INFO            ");
        jMenu17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu17MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu17);

        jMenu18.setText("           Print                ");
        jMenu18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu18MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu18);

        jMenu13.setText("                   ");
        jMenuBar1.add(jMenu13);

        jMenu15.setBorder(null);
        jMenu15.setText("-");
        jMenu15.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenu15.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jMenu15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jMenu15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu15MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu15);

        jMenu16.setBorder(null);
        jMenu16.setForeground(new java.awt.Color(204, 0, 0));
        jMenu16.setText("X");
        jMenu16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jMenu16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenu16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jMenu16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu16MouseClicked(evt);
            }
        });
        jMenu16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu16ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu16);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void amountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountFieldActionPerformed

    private void amountFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_amountFieldMouseClicked
        // TODO add your handling code here:
        amountField.setText("");

    }//GEN-LAST:event_amountFieldMouseClicked

    private void noFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noFieldActionPerformed

    private void noFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_noFieldMouseClicked
        // TODO add your handling code here:
        noField.setText("");

    }//GEN-LAST:event_noFieldMouseClicked

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void nameFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameFieldMouseClicked
        // TODO add your handling code here:

        nameField.setText("");

    }//GEN-LAST:event_nameFieldMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String tam = amountField.getText();
        double amo = Double.parseDouble(tam);

        if (amo > 0) {

            String s = new String("Joma");
            String pori = new String("");
            String am = amountField.getText();
            String number = noField.getText();
            String nM = nameField.getText();
            String s1 = new String("Neya");
            String a = select.getSelectedItem().toString();

            if (am.equals(pori) || number.equals(pori) || am.equals("Taka") || nM.equals("Customer Nam") || ((JTextField) dateField.getDateEditor().getUiComponent()).getText().equals("") || nM.equals("") || nM.equals(amo)) {
                if (((JTextField) dateField.getDateEditor().getUiComponent()).getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Sorry Enter Date...");
                } else if (number.equals(pori) || number.equals("Number")) {
                    JOptionPane.showMessageDialog(null, "Sorry Enter Customer Number...");
                } else if (nM.equals("") || nM.equals("Customer Nam")) {
                    JOptionPane.showMessageDialog(null, "Sorry Enter Customer Name...");
                } else {
                    JOptionPane.showMessageDialog(null, "Sorry Enter Amount...");
                }

            } else {

                if (s.equals(a)) {

                    try {
                        String x = " Joma ";
                        String y = "0";
                        JOptionPane.showMessageDialog(null, "Joma");
                        String no = noField.getText();
                        String name = nameField.getText();
                        System.out.println(name);
                        String amount = amountField.getText();
                        String date = ((JTextField) dateField.getDateEditor().getUiComponent()).getText();
                        ///this.dispose();
                        DataBase db = new DataBase();
                        db.CustomerStock(no, name, amount, date, x, y);
                        db.CustomerStockJomaHitTotalTk(no, name, amount, date, x, y);
                    } catch (SQLException ex) {
                        Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } else if (s1.equals(a)) {

                    try {
                        String x = " Naya ";
                        String y = "0";
                        JOptionPane.showMessageDialog(null, "Naya");
                        String no = noField.getText();
                        String name = nameField.getText();
                        System.out.println(name);
                        String amount = amountField.getText();
                        String date = ((JTextField) dateField.getDateEditor().getUiComponent()).getText();
                        ///this.dispose();
                        DataBase db = new DataBase();
                        db.CustomerStockKoroch(no, name, amount, date, x, y);

                        db.CustomerStockKorochNewaHitTotalTk(no, name, amount, date, x, y);
                    } catch (SQLException ex) {
                        Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }

        } else {
            JOptionPane.showMessageDialog(null, "Sorry Enter Amount...");
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    public void SearchAllCustomer() {

        String select = select1.getSelectedItem().toString();
        String a = "ID";
        String name = searchF.getText();
        if (select.equals(a)) {

            try {
                this.dispose();
                DataBase db = new DataBase();
                db.CustomerAllByName(name);

            } catch (SQLException ex) {
                Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            System.out.println("OOO");

            try {
                this.dispose();
                DataBase db = new DataBase();
                db.CustomerAllByName(name);

            } catch (SQLException ex) {
                Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
            }
//ID BA NAME JAI HOK ALL SEARCH HOBE
//ID BA NAME JAI HOK ALL SEARCH HOBE
//ID BA NAME JAI HOK ALL SEARCH HOBE
//ID BA NAME JAI HOK ALL SEARCH HOBE

        }
    }

    public void SearchAllCustomerOneDate() {

        String aD = ((JTextField) aDate.getDateEditor().getUiComponent()).getText();

        String bD = ((JTextField) bDate.getDateEditor().getUiComponent()).getText();

        String name = searchF.getText();
        String select = select1.getSelectedItem().toString();
        String a = "ID";
        JOptionPane.showMessageDialog(null, "SearchAllCustomerOneDate() ");

        if (select.equals(a)) {

            JOptionPane.showMessageDialog(null, "ALL SEarch For Null      By ID....");

            try {
                this.dispose();
                DataBase db = new DataBase();
                db.SearchCustomerByOneDateAndName(name, aD);

            } catch (SQLException ex) {
                Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

            try {
                this.dispose();
                DataBase db = new DataBase();
                db.SearchCustomerByOneDateAndName(name, aD);

            } catch (SQLException ex) {
                Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        //ID BA NAME FOR ONE DATE SEARCH ALL
    }

    public void SearchAllCustomerTwoDate() {
        String aD = ((JTextField) aDate.getDateEditor().getUiComponent()).getText();

        String bD = ((JTextField) bDate.getDateEditor().getUiComponent()).getText();

        String name = searchF.getText();
        String select = select1.getSelectedItem().toString();
        String a = "ID";
        JOptionPane.showMessageDialog(null, "SearchAllCustomerTwoDate() ");

        if (select.equals(a)) {

            try {
                this.dispose();
                DataBase db = new DataBase();
                db.SearchCustomerByTwoDateAndName(name, aD, bD);

                JOptionPane.showMessageDialog(null, "ALL SEarch For Null   by NAme");
            } catch (SQLException ex) {
                Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

            try {
                this.dispose();
                DataBase db = new DataBase();
                db.SearchCustomerByTwoDateAndName(name, aD, bD);

                JOptionPane.showMessageDialog(null, "ALL SEarch For Null   by NAme");
            } catch (SQLException ex) {
                Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        //ID BA NAME JAI HOK TWO DATE ER MAJER SAOB ASHBE
    }

    public void SearchAllCustomerByOnlyName() {
        String aD = ((JTextField) aDate.getDateEditor().getUiComponent()).getText();

        String bD = ((JTextField) bDate.getDateEditor().getUiComponent()).getText();

        String name = searchF.getText();
        String select = select1.getSelectedItem().toString();
        String a = "ID";

        JOptionPane.showMessageDialog(null, "SearchAllCustomerByOnlyName() ");

        if (select.equals(a)) {

            try {
                // JOptionPane.showConfirmDialog(null, "Search by ID....??????");

                this.dispose();
                DataBase db = new DataBase();
                db.CustomerAllByID(name);
            } catch (SQLException ex) {
                Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

            try {
                JOptionPane.showMessageDialog(null, "XXXXXXXXXALL SEarch For Null   by NAme");
                this.dispose();
                DataBase db = new DataBase();
                db.CustomerAllByName(name);
            } catch (SQLException ex) {
                Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

    public void SearchAllCustomerByOnlyNameAndOneDate() {

        String aD = ((JTextField) aDate.getDateEditor().getUiComponent()).getText();

        String bD = ((JTextField) bDate.getDateEditor().getUiComponent()).getText();

        String name = searchF.getText();
        String select = select1.getSelectedItem().toString();
        String a = "ID";
        JOptionPane.showMessageDialog(null, "SearchAllCustomerOneDate() ");

        if (select.equals(a)) {

            //JOptionPane.showMessageDialog(null, "ALL SEarch For Null      By ID....");
            try {
                this.dispose();
                DataBase db = new DataBase();
                db.SearchCustomerByOneDateAndName(name, aD);

            } catch (SQLException ex) {
                Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

            try {
                this.dispose();
                DataBase db = new DataBase();
                db.SearchCustomerByOneDateAndName(name, aD);

            } catch (SQLException ex) {
                Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    public void SearchAllCustomerByOnlyNameAndTwoDate() {

        String aD = ((JTextField) aDate.getDateEditor().getUiComponent()).getText();

        String bD = ((JTextField) bDate.getDateEditor().getUiComponent()).getText();

        String name = searchF.getText();
        String select = select1.getSelectedItem().toString();
        String a = "ID";
        JOptionPane.showMessageDialog(null, "SearchAllCustomerTwoDate() ");

        if (select.equals(a)) {

            try {
                this.dispose();
                DataBase db = new DataBase();
                db.SearchCustomerByTwoDateAndName(name, aD, bD);

                JOptionPane.showMessageDialog(null, "ALL SEarch For Null   by NAme");
            } catch (SQLException ex) {
                Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

            try {
                this.dispose();
                DataBase db = new DataBase();
                db.SearchCustomerByTwoDateAndName(name, aD, bD);

                JOptionPane.showMessageDialog(null, "ALL SEarch For Null   by NAme");
            } catch (SQLException ex) {
                Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String select = select1.getSelectedItem().toString();
        String a = "ID";
        String Tnull = "";
        String namTemp = searchF.getText();
        String aD = ((JTextField) aDate.getDateEditor().getUiComponent()).getText();

        String bD = ((JTextField) bDate.getDateEditor().getUiComponent()).getText();

        if (namTemp.equals("") && aD.equals("") && bD.equals("")) {
            SearchAllCustomer();

        } else if (namTemp.equals("") && aD != "" && bD.equals("")) {
            SearchAllCustomerOneDate();

        } else if (namTemp.equals("") && aD != "" && bD != "") {
            SearchAllCustomerTwoDate();

        } else if (namTemp != "" && aD.equals("") && bD.equals("")) {
            SearchAllCustomerByOnlyName();

        } else if (namTemp != "" && aD != "" && bD.equals("")) {
            SearchAllCustomerByOnlyNameAndOneDate();

        } else if (namTemp != "" && aD != "" && bD != "") {

            SearchAllCustomerByOnlyNameAndTwoDate();

        } else {

            JOptionPane.showMessageDialog(null, "SORRY");

        }

        /**
         * *************************************************************************************************************************************************************************
         *
         * String select=select1.getSelectedItem().toString(); String a="ID";
         * String Tnull=""; String namTemp = searchF.getText(); String aD =
         * ((JTextField) aDate.getDateEditor().getUiComponent()).getText();
         *
         * String bD = ((JTextField)
         * bDate.getDateEditor().getUiComponent()).getText();
         *
         * if ( namTemp.equals("enter nam")) { System.out.println("OK");
         * JOptionPane.showMessageDialog(null, "Enter Nam"); //
         * JOptionPane.showMessageDialog(null, "Enter TK...!");
         *
         * } else if (aD.equals("") && bD.equals("") && namTemp != "") {
         * System.out.println("Search Only By Name..."); if(select.equals(a)){
         *
         * String pori = new String(""); String name=searchF.getText();
         * if(name.equals(pori)){ JOptionPane.showMessageDialog(null,"Enter
         * Valid ID .....!"); }else if(aD!=Tnull && bD!=Tnull && namTemp!=""){
         * JOptionPane.showMessageDialog(null,"NAME AND DATE TO DATE");
         *
         *
         * }
         * else{ try { // JOptionPane.showConfirmDialog(null, "Search by
         * ID....??????");
         *
         * this.dispose(); DataBase db = new DataBase();
         * db.CustomerAllByID(name); } catch (SQLException ex) {
         * Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE,
         * null, ex); }
         *
         * }
         * }
         * else{ try { // TODO add your handling code here:
         *
         * String pori = new String(""); String name=searchF.getText();
         * if(name.equals(pori)){ // JOptionPane.showConfirmDialog(null,
         * "Sorryy"); JOptionPane.showMessageDialog(null, "Search All");
         * this.dispose(); DataBase db = new DataBase();
         * db.CustomerAllByName(name); } else{ this.dispose(); DataBase db = new
         * DataBase(); db.CustomerAll(name); } } catch (SQLException ex) {
         * Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE,
         * null, ex); }
         *
         * }
         *
         * } else { if (bD.equals("")) {
         *
         * try { System.out.println("Search by one Date And Name.....");
         *
         * this.dispose(); DataBase ob = new DataBase();
         * ob.SearchCustomerByOneDateAndName(namTemp, aD); // this.dispose(); //
         * DataBase ob = new DataBase(); //
         * ob.SearchEmployeeByOneDateAndName(name, aD); } catch (SQLException
         * ex) {
         * Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE,
         * null, ex); }
         *
         * } else {
         *
         * try { System.out.println("Search by Two Date And Name");
         *
         * this.dispose(); DataBase ob = new DataBase();
         * ob.SearchCustomerByTwoDateAndName(namTemp, aD,bD); //
         * ob.SearchEmployeeByTwoDateAndName(name, aD, bD); } catch
         * (SQLException ex) {
         * Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE,
         * null, ex); }
         *
         * }
         *
         * }
         *
         *
         *
         *
         *
         * /*********************************************************************************************************************************************************************
         */
        /*
            
         if(select.equals(a)){

         String pori = new String("");
         String name=searchF.getText();
         if(name.equals(pori)){
         JOptionPane.showMessageDialog(null,"Enter Valid ID .....!");
         }else{
         try {
         // JOptionPane.showConfirmDialog(null, "Search by ID....??????");

         this.dispose();
         DataBase db = new DataBase();
         db.CustomerAllByID(name);
         } catch (SQLException ex) {
         Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
         }

         }
         }
         else{
         try {
         // TODO add your handling code here:

         String pori = new String("");
         String name=searchF.getText();
         if(name.equals(pori)){
         // JOptionPane.showConfirmDialog(null, "Sorryy");
         JOptionPane.showMessageDialog(null, "Search All");
         this.dispose();
         DataBase db = new DataBase();
         db.CustomerAllByName(name);
         }
         else{
         this.dispose();
         DataBase db = new DataBase();
         db.CustomerAll(name);
         }
         } catch (SQLException ex) {
         Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
         }

         }

         */
    }//GEN-LAST:event_jButton2ActionPerformed

    private void stockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockTableMouseClicked
        // TODO add your handling code here:
        TableModel model = stockTable.getModel();
        int index[] = stockTable.getSelectedRows();
        Object[] row = new Object[10];
        // AtotalProductStock page=new AtotalProductStock();

        //DefaultTableModel model2=page.memoTable.getModel();
        //DefaultTableModel m2 = (DefaultTableModel).stockTable.getModel();
        for (int i = 0; i < index.length; i++) {

            row[0] = model.getValueAt(index[i], 0);
            row[1] = model.getValueAt(index[i], 1);

            System.out.println("OOKK" + (String) row[1]);

            row[2] = model.getValueAt(index[i], 2);
            row[3] = model.getValueAt(index[i], 3);
            row[4] = model.getValueAt(index[i], 4);
            row[5] = model.getValueAt(index[i], 5);
            row[6] = model.getValueAt(index[i], 6);
            row[7] = model.getValueAt(index[i], 7);

            row[8] = model.getValueAt(index[i], 8);

            row[9] = model.getValueAt(index[i], 9);
            row[10] = model.getValueAt(index[i], 10);
            iL.setText((String) row[10]);
          //   String ab=f.getText();

            double temp = Double.parseDouble((String) row[2]);
            System.out.println("1" + row[1]);
            System.out.println("1" + row[2]);
            System.out.println("1" + row[3]);
            System.out.println("1" + row[4]);
            System.out.println("1" + row[5]);
            System.out.println("1" + row[6]);
            System.out.println("1" + row[7]);
            System.out.println("1" + row[8]);
            System.out.println("1" + row[10]);

            ((JTextField) dateField.getDateEditor().getUiComponent()).setText((String) row[0]);
          // pNameField.setSelectedItem(row[1]);

            //  quantityField.setText((String) row[2]);//tk joma
            nameField.setText((String) row[3]); //customer name
            noField.setText(((String) row[4])); //customer no
            amountField.setText((String) row[5]);  //poriman

          //  driver.setText((String) row[6]); //dor
            //  calan_no.setText((String) row[7]); //koroch
            // gari_no.setText((String) row[8]); //kibabot
         //  f.setText();
            //double temp = Double.parseDouble(quantityField.getText());
            //    if(temp==0){
            //     f.setText("0");
            /// }
        }
    }//GEN-LAST:event_stockTableMouseClicked

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        try {
            // TODO add your handling code here:
            this.dispose();
            DataBase x=new DataBase();
            x.searcgMemeoID();
              // x.searcgMemeoID();
           // cashMemo ob = new cashMemo();
           // ob.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(allInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenu4MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:

        this.dispose();
        BtotalMalKinartStock ob = new BtotalMalKinartStock();
        ob.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:

        this.dispose();
        AMalBickriStock ob = new AMalBickriStock();
        ob.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenu5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu5MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu5MouseClicked

    private void jMenu9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu9MouseClicked
        try {
            // TODO add your handling code here:
            this.dispose();
            CcustomerStock ob = new CcustomerStock();
            ob.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenu9MouseClicked

    private void jMenuItem2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2MouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:

        this.dispose();
        newEmployee ob = new newEmployee();
        ob.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenu12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu12MouseClicked
        // TODO add your handling code here:
        this.dispose();
        DAmalikerJomaKoroch ob = new DAmalikerJomaKoroch();
        ob.setVisible(true);
    }//GEN-LAST:event_jMenu12MouseClicked

    private void jMenu18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu18MouseClicked
        // TODO add your handling code here:
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setJobName("Print Data");
        job.setPrintable(new Printable() {
            public int print(Graphics pg, PageFormat pf, int pageNum) {

                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }
                Graphics2D g2 = (Graphics2D) pg;
                g2.translate(pf.getImageableX(), pf.getImageableY());
                g2.scale(0.70, 1.20);
                printLabel.print(g2);
                return Printable.PAGE_EXISTS;

            }

        });
        boolean ok = job.printDialog();
        if (ok) {

            try {
                job.print();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jMenu18MouseClicked

    private void jMenu15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu15MouseClicked
        // TODO add your handling code here:
        this.setState(allInfo.ICONIFIED);
    }//GEN-LAST:event_jMenu15MouseClicked

    private void jMenu16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu16MouseClicked

        System.exit(WIDTH);

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu16MouseClicked

    private void jMenu16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu16ActionPerformed

    private void jMenu17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu17MouseClicked
        // TODO add your handling code here:

        this.dispose();
        allInfo ob = new allInfo();
        ob.setVisible(true);
    }//GEN-LAST:event_jMenu17MouseClicked

    private void searchFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFKeyPressed
        // TODO add your handling code here:


        switch (evt.getKeyCode()) {

            case KeyEvent.VK_BACK_SPACE:
                break;
            case KeyEvent.VK_ENTER:
                searchF.setText(searchF.getText());
                break;
            default:
                EventQueue.invokeLater(new Runnable() {
                    @Override
                    public void run() {

                        String txt = searchF.getText();
                        autoComplete(txt);
                    }
                });
        }
    }//GEN-LAST:event_searchFKeyPressed

    private void searchFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFMouseClicked
        // TODO add your handling code here:
        //  DataBaseName();

    }//GEN-LAST:event_searchFMouseClicked

    private void searchFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFMouseReleased

    private void searchFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFMousePressed

        


// TODO add your handling code here:
    }//GEN-LAST:event_searchFMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CcustomerStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CcustomerStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CcustomerStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CcustomerStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CcustomerStock().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(CcustomerStock.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser aDate;
    private javax.swing.JTextField amountField;
    private com.toedter.calendar.JDateChooser bDate;
    private com.toedter.calendar.JDateChooser dateField;
    private javax.swing.JLabel iL;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu12;
    private javax.swing.JMenu jMenu13;
    private javax.swing.JMenu jMenu15;
    private javax.swing.JMenu jMenu16;
    private javax.swing.JMenu jMenu17;
    private javax.swing.JMenu jMenu18;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    javax.swing.JTextField jomaField;
    javax.swing.JTextField korochField;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField noField;
    private javax.swing.JPanel printLabel;
    javax.swing.JTextField remainField;
    private javax.swing.JTextField searchF;
    private javax.swing.JComboBox select;
    private javax.swing.JComboBox select1;
    javax.swing.JTable stockTable;
    // End of variables declaration//GEN-END:variables

}
